# coding: utf-8

"""
    Consolidate Services

    Description of all APIs  # noqa: E501

    OpenAPI spec version: version not set
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import pyargocd
from pyargocd.api.repository_service_api import RepositoryServiceApi  # noqa: E501
from pyargocd.rest import ApiException


class TestRepositoryServiceApi(unittest.TestCase):
    """RepositoryServiceApi unit test stubs"""

    def setUp(self):
        self.api = pyargocd.api.repository_service_api.RepositoryServiceApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_repository_service_create_repository(self):
        """Test case for repository_service_create_repository

        CreateRepository creates a new repository configuration  # noqa: E501
        """
        pass

    def test_repository_service_create_write_repository(self):
        """Test case for repository_service_create_write_repository

        CreateWriteRepository creates a new write repository configuration  # noqa: E501
        """
        pass

    def test_repository_service_delete_repository(self):
        """Test case for repository_service_delete_repository

        DeleteRepository deletes a repository from the configuration  # noqa: E501
        """
        pass

    def test_repository_service_delete_write_repository(self):
        """Test case for repository_service_delete_write_repository

        DeleteWriteRepository deletes a write repository from the configuration  # noqa: E501
        """
        pass

    def test_repository_service_get(self):
        """Test case for repository_service_get

        Get returns a repository or its credentials  # noqa: E501
        """
        pass

    def test_repository_service_get_app_details(self):
        """Test case for repository_service_get_app_details

        GetAppDetails returns application details by given path  # noqa: E501
        """
        pass

    def test_repository_service_get_helm_charts(self):
        """Test case for repository_service_get_helm_charts

        GetHelmCharts returns list of helm charts in the specified repository  # noqa: E501
        """
        pass

    def test_repository_service_get_write(self):
        """Test case for repository_service_get_write

        GetWrite returns a repository or its write credentials  # noqa: E501
        """
        pass

    def test_repository_service_list_apps(self):
        """Test case for repository_service_list_apps

        ListApps returns list of apps in the repo  # noqa: E501
        """
        pass

    def test_repository_service_list_refs(self):
        """Test case for repository_service_list_refs

        """
        pass

    def test_repository_service_list_repositories(self):
        """Test case for repository_service_list_repositories

        ListRepositories gets a list of all configured repositories  # noqa: E501
        """
        pass

    def test_repository_service_list_write_repositories(self):
        """Test case for repository_service_list_write_repositories

        ListWriteRepositories gets a list of all configured write repositories  # noqa: E501
        """
        pass

    def test_repository_service_update_repository(self):
        """Test case for repository_service_update_repository

        UpdateRepository updates a repository configuration  # noqa: E501
        """
        pass

    def test_repository_service_update_write_repository(self):
        """Test case for repository_service_update_write_repository

        UpdateWriteRepository updates a write repository configuration  # noqa: E501
        """
        pass

    def test_repository_service_validate_access(self):
        """Test case for repository_service_validate_access

        ValidateAccess validates access to a repository with given parameters  # noqa: E501
        """
        pass

    def test_repository_service_validate_write_access(self):
        """Test case for repository_service_validate_write_access

        ValidateWriteAccess validates write access to a repository with given parameters  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Consolidate Services

    Description of all APIs  # noqa: E501

    OpenAPI spec version: version not set
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from argocd.configuration import Configuration


class V1alpha1HydrateOperation(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'dry_sha': 'str',
        'finished_at': 'V1Time',
        'hydrated_sha': 'str',
        'message': 'str',
        'phase': 'str',
        'source_hydrator': 'V1alpha1SourceHydrator',
        'started_at': 'V1Time'
    }

    attribute_map = {
        'dry_sha': 'drySHA',
        'finished_at': 'finishedAt',
        'hydrated_sha': 'hydratedSHA',
        'message': 'message',
        'phase': 'phase',
        'source_hydrator': 'sourceHydrator',
        'started_at': 'startedAt'
    }

    def __init__(self, dry_sha=None, finished_at=None, hydrated_sha=None, message=None, phase=None, source_hydrator=None, started_at=None, _configuration=None):  # noqa: E501
        """V1alpha1HydrateOperation - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._dry_sha = None
        self._finished_at = None
        self._hydrated_sha = None
        self._message = None
        self._phase = None
        self._source_hydrator = None
        self._started_at = None
        self.discriminator = None

        if dry_sha is not None:
            self.dry_sha = dry_sha
        if finished_at is not None:
            self.finished_at = finished_at
        if hydrated_sha is not None:
            self.hydrated_sha = hydrated_sha
        if message is not None:
            self.message = message
        if phase is not None:
            self.phase = phase
        if source_hydrator is not None:
            self.source_hydrator = source_hydrator
        if started_at is not None:
            self.started_at = started_at

    @property
    def dry_sha(self):
        """Gets the dry_sha of this V1alpha1HydrateOperation.  # noqa: E501


        :return: The dry_sha of this V1alpha1HydrateOperation.  # noqa: E501
        :rtype: str
        """
        return self._dry_sha

    @dry_sha.setter
    def dry_sha(self, dry_sha):
        """Sets the dry_sha of this V1alpha1HydrateOperation.


        :param dry_sha: The dry_sha of this V1alpha1HydrateOperation.  # noqa: E501
        :type: str
        """

        self._dry_sha = dry_sha

    @property
    def finished_at(self):
        """Gets the finished_at of this V1alpha1HydrateOperation.  # noqa: E501


        :return: The finished_at of this V1alpha1HydrateOperation.  # noqa: E501
        :rtype: V1Time
        """
        return self._finished_at

    @finished_at.setter
    def finished_at(self, finished_at):
        """Sets the finished_at of this V1alpha1HydrateOperation.


        :param finished_at: The finished_at of this V1alpha1HydrateOperation.  # noqa: E501
        :type: V1Time
        """

        self._finished_at = finished_at

    @property
    def hydrated_sha(self):
        """Gets the hydrated_sha of this V1alpha1HydrateOperation.  # noqa: E501


        :return: The hydrated_sha of this V1alpha1HydrateOperation.  # noqa: E501
        :rtype: str
        """
        return self._hydrated_sha

    @hydrated_sha.setter
    def hydrated_sha(self, hydrated_sha):
        """Sets the hydrated_sha of this V1alpha1HydrateOperation.


        :param hydrated_sha: The hydrated_sha of this V1alpha1HydrateOperation.  # noqa: E501
        :type: str
        """

        self._hydrated_sha = hydrated_sha

    @property
    def message(self):
        """Gets the message of this V1alpha1HydrateOperation.  # noqa: E501


        :return: The message of this V1alpha1HydrateOperation.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this V1alpha1HydrateOperation.


        :param message: The message of this V1alpha1HydrateOperation.  # noqa: E501
        :type: str
        """

        self._message = message

    @property
    def phase(self):
        """Gets the phase of this V1alpha1HydrateOperation.  # noqa: E501


        :return: The phase of this V1alpha1HydrateOperation.  # noqa: E501
        :rtype: str
        """
        return self._phase

    @phase.setter
    def phase(self, phase):
        """Sets the phase of this V1alpha1HydrateOperation.


        :param phase: The phase of this V1alpha1HydrateOperation.  # noqa: E501
        :type: str
        """

        self._phase = phase

    @property
    def source_hydrator(self):
        """Gets the source_hydrator of this V1alpha1HydrateOperation.  # noqa: E501


        :return: The source_hydrator of this V1alpha1HydrateOperation.  # noqa: E501
        :rtype: V1alpha1SourceHydrator
        """
        return self._source_hydrator

    @source_hydrator.setter
    def source_hydrator(self, source_hydrator):
        """Sets the source_hydrator of this V1alpha1HydrateOperation.


        :param source_hydrator: The source_hydrator of this V1alpha1HydrateOperation.  # noqa: E501
        :type: V1alpha1SourceHydrator
        """

        self._source_hydrator = source_hydrator

    @property
    def started_at(self):
        """Gets the started_at of this V1alpha1HydrateOperation.  # noqa: E501


        :return: The started_at of this V1alpha1HydrateOperation.  # noqa: E501
        :rtype: V1Time
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this V1alpha1HydrateOperation.


        :param started_at: The started_at of this V1alpha1HydrateOperation.  # noqa: E501
        :type: V1Time
        """

        self._started_at = started_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V1alpha1HydrateOperation, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V1alpha1HydrateOperation):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, V1alpha1HydrateOperation):
            return True

        return self.to_dict() != other.to_dict()
